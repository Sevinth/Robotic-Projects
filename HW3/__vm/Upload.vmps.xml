<VisualMicro>
  <Program Name="HW3" Ext=".ino" Location="C:\Robotic-Projects\HW3">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Mark\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" SketchName="HW3" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 50;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE_HARDWARESERIAL1 13;VM_DEBUGGER_TYPE_HARDWARESERIAL2 14;VM_DEBUGGER_TYPE_HARDWARESERIAL3 15;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_USB;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="pololu" Platform="avr" Architecture="avr">
      <Board Name="pololu_pololu_avr_a-star32U4" Description="Pololu A-Star 32U4" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\Mark\Documents\Arduino" name="Pololu A-Star 32U4" vid.0="0x1ffb" pid.0="0x0101" vid.1="0x1ffb" pid.1="0x2300" upload.tool="arduino:avrdude" upload.protocol="avr109" upload.maximum_size="28672" upload.maximum_data_size="2560" upload.speed="57600" upload.disable_flushing="true" upload.use_1200bps_touch="true" upload.wait_for_upload_port="true" bootloader.tool="arduino:avrdude" bootloader.low_fuses="0xff" bootloader.high_fuses="0xd0" bootloader.extended_fuses="0xc8" bootloader.file="caterina/Caterina-A-Star.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x2F" build.mcu="atmega32u4" build.f_cpu="16000000L" build.vid="0x1ffb" build.pid="0x2300" build.usb_product="&quot;Pololu A-Star 32U4&quot;" build.usb_manufacturer="&quot;Pololu Corporation&quot;" build.board="AVR_A_STAR_32U4" build.core="arduino:arduino" build.variant="arduino:leonardo" build.extra_flags="{build.usb_flags}" runtime.ide.path="C:\Program Files (x86)\Arduino" runtime.os="windows" build.system.path="C:\Users\Mark\Documents\Arduino\hardware\pololu\avr\system" runtime.ide.version="10609" target_package="pololu" target_platform="avr" runtime.hardware.path="C:\Users\Mark\Documents\Arduino\hardware\pololu" originalid="pololu_avr_a-star32U4" intellisense.tools.path="{runtime.tools.avr-gcc.path}/" intellisense.include.paths="{intellisense.tools.path}avr/include/;{intellisense.tools.path}/avr/include/avr/;{intellisense.tools.path}lib\gcc\avr\4.8.1\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}/hardware/arduino/avr/bootloaders/{bootloader.file}&quot;" version="1.5.6" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="{compiler.warning_flags} -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="{build.path}/{archive_file}" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\b3x05dwk.yaq\Micro Platforms\arduino16x" usbavrpgm.name="Pololu USB AVR Programmer" usbavrpgm.communication="serial" usbavrpgm.protocol="avrispv2" usbavrpgm.program.protocol="avrispv2" usbavrpgm.program.tool="arduino:avrdude" usbavrpgm.program.extra_params="-P{serial.port}" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.vm.boardinfo.id="pololu_pololu_avr_a-star32U4" runtime.vm.boardinfo.name="pololu_pololu_avr_a-star32U4" runtime.vm.boardinfo.desc="Pololu A-Star 32U4" runtime.vm.boardinfo.src_location="C:\Users\Mark\Documents\Arduino\hardware\pololu\avr" ide.hint="For use with Arduino.cc 1.6.2+ ide" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.6.9" ide.default.version="10609" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\Mark\Documents\Arduino" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr" build.core.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\Mark\Documents\Arduino\hardware\pololu\avr" runtime.platform.path="C:\Users\Mark\Documents\Arduino\hardware\pololu\avr" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" vm.runtime.compiler.showwarnings="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="C:\Users\Mark\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" LocalPort="COM3" LocalPortSpeed="9600" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="HW3.ino, line 338" Id="55ef3e0e-7bc2-4a86-8db5-b8c4ad580522" Enabled="1" Message="{angleToWaypoint}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="338" FileColumn="1" FunctionName="courseCorrection(int waypoint)" FunctionLineOffset="41" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='55ef3e0e-7bc2-4a86-8db5-b8c4ad580522'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>331				angleToWaypoint *= -1;
332				turnDir = -1; //Left Turn
333			} else if (angleToWaypoint &gt; 0.0f) {
334			
335				turnDir = 1;
336			}
337		}
--&gt;338	
339		if (rPathType == Path::DIRECT) {
340			float encoderDeltas = deltaEncoderRight - deltaEncoderLeft;
341			
342			if(encoderDeltas &gt; 0.0f) {
343	
344				leftMotorSpeed += 5;
345				rightMotorSpeed -= 5;
346			}
347			else if (encoderDeltas &lt; 0.0f) {
</Source>
        <MessageVariables>
          <MessageVariable Name="angleToWaypoint" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="HW3.ino, line 426" Id="efe0ccae-0dc3-45af-855d-13ff918104d5" Enabled="1" Message="{gCurrentPose[0]}{gCurrentPose[1]}{gCurrentPose[2]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="426" FileColumn="1" FunctionName="moveToLocation(int waypoint)" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='efe0ccae-0dc3-45af-855d-13ff918104d5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>419		yTol = 0.5;
420	
421		if (rPathType == Path::DIRECT) {
422	
423			while ((gCurrentPose[0] &lt;= gPath[waypoint][0] - 0.5 || gCurrentPose[0] &gt;= gPath[waypoint][0] + 0.5)) {
424				motors.setSpeeds(leftMotorSpeed, rightMotorSpeed);
425				updatePosition();
--&gt;426				courseCorrection(waypoint);
427	
428			}
429	
430	
431			motors.setSpeeds(0, 0);
432		}
433		else if (rPathType == Path::CURVE) {
434	
435			rightMotorSpeed = 100;
</Source>
        <MessageVariables>
          <MessageVariable Name="gCurrentPose[0]" Index="1" />
          <MessageVariable Name="gCurrentPose[1]" Index="2" />
          <MessageVariable Name="gCurrentPose[2]" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="HW3.ino, line 126" Id="e8be0eeb-5f73-4a3a-8e0b-2a53a83c6066" Enabled="1" Message="{gyroZRot}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="126" FileColumn="1" FunctionName="getZRot(float deltaTime)" FunctionLineOffset="15" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='e8be0eeb-5f73-4a3a-8e0b-2a53a83c6066'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>119		float gyroZRot = gyroZRotRaw*8.75f; // millidegrees / seceond
120	
121		gyroZRot = (1.0f/1000.0)*gyroZRot;
122		gyroZRot = (pi / 180.0f)*gyroZRot;
123		gyroZRot = gyroZRot/1000.0f;
124	
125		return gyroZRot*deltaTime;
--&gt;126	
127	}
128	
129	
130	//Fourth Order Runge-Kutta
131	float *rk4(float timeEllapsed) {
132	
133		float k1[4] = { 0,0,0,0 };
134		float k2[4] = { 0,0,0,0 };
135		float k3[4] = { 0,0,0,0 };
</Source>
        <MessageVariables>
          <MessageVariable Name="gyroZRot" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="HW3.ino, line 385" Id="c6912636-1dec-495f-b16f-35e1a9bc38fa" Enabled="1" Message="{angle}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="385" FileColumn="1" FunctionName="rotateInPlace(float angle)" FunctionLineOffset="5" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='c6912636-1dec-495f-b16f-35e1a9bc38fa'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>378	}
379	
380	//Not used currently
381	void rotateInPlace(float angle, int turnDirection) {
382	
383		float leftSpeed = 0;
384		float rightSpeed = 0;
--&gt;385	
386		if (turnDirection &lt; 0) {
387			leftSpeed = -200;
388			rightSpeed = 200;
389	
390			while (rCurrentPose[2] &lt;= angle) {
391				motors.setSpeeds(leftSpeed, rightSpeed);
392				updatePosition();
393				
394			}
</Source>
        <MessageVariables>
          <MessageVariable Name="angle" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="HW3.ino, line 257" Id="ebf1b0af-3ed3-44f2-9728-43c27ea988e7" Enabled="1" Message="{timeEllapsed}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="257" FileColumn="1" FunctionName="angCompFilter(float timeEllapsed, float theta)" FunctionLineOffset="2" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='ebf1b0af-3ed3-44f2-9728-43c27ea988e7'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>250		}
251	
252		float timeEnd = millis() - timeBegin;
253	
254	}
255	//Complimentary filter
256	float angCompFilter(float timeEllapsed, float theta) {
--&gt;257	
258		//Gyro rotation about Z axis
259		float zGyro = getZRot(timeEllapsed); //Angular displacement about the Z axis according to the gyro
260	
261		//Apply complimentary filter to gyrosocope and accelerometer values
262		float imuAngVal = COMP_F_A*(rPrevPose[2] + zGyro) + (1.0f - COMP_F_A)*(theta);
263	
264		return imuAngVal;
265	
266	}
</Source>
        <MessageVariables>
          <MessageVariable Name="timeEllapsed" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="6" Name="HW3.ino, line 447" Id="c52a8812-d256-4cbd-90a7-a1eb3f42d541" Enabled="1" Message="{gCurrentPose[1]}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="447" FileColumn="1" FunctionName="moveToLocation(int waypoint)" FunctionLineOffset="30" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='c52a8812-d256-4cbd-90a7-a1eb3f42d541'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>440				updatePosition();
441				lcd.gotoXY(0, 0);
442				lcd.print(gCurrentPose[2]);
443				lcd.gotoXY(0, 1);
444				lcd.print(rVelocities[3]);
445				courseCorrection(waypoint);
446	
--&gt;447	
448			}
449	
450	
451		}
452	
453	
454	
455	}
456	
</Source>
        <MessageVariables>
          <MessageVariable Name="gCurrentPose[1]" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="7" Name="HW3.ino, line 367" Id="a8178dd3-a82f-4102-bb57-8944844a16cd" Enabled="1" Message="{deltaEncoderLeft}{deltaEncoderRight}{CalculatedRadius}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="367" FileColumn="1" FunctionName="courseCorrection(int waypoint)" FunctionLineOffset="67" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a8178dd3-a82f-4102-bb57-8944844a16cd'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>360		}
361		else if (rPathType == Path::CURVE) {
362	
363			float velRatio = calcTurnRatios(11.0f);
364	
365			float denom = fabs(deltaEncoderLeft - deltaEncoderRight);
366			float CalculatedRadius = (baseWidth / 2.0f)*(deltaEncoderRight + deltaEncoderLeft) / (denom);
--&gt;367	
368		
369	
370				
371			leftMotorSpeed = constrain(leftMotorSpeed, 75, 225);
372			rightMotorSpeed = constrain(rightMotorSpeed, 75, 225);
373	
374		}
375		
376	
</Source>
        <MessageVariables>
          <MessageVariable Name="deltaEncoderLeft" Index="1" />
          <MessageVariable Name="deltaEncoderRight" Index="2" />
          <MessageVariable Name="CalculatedRadius" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="8" Name="HW3.ino, line 202" Id="79fd8e25-31cc-415f-a161-38dbe74a51cd" Enabled="1" Message="{filteredAngle}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="202" FileColumn="1" FunctionName="updatePosition()" FunctionLineOffset="27" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='79fd8e25-31cc-415f-a161-38dbe74a51cd'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>195		float deltaTheta = (1.0f / baseWidth)*(deltaRight - deltaLeft);
196	
197	
198	
199		float filteredAngle = angCompFilter(timeSinceLast, deltaTheta);
200	
201		float thetaDiff = deltaTheta - gyroRot*timeSinceLast;
--&gt;202	
203		//Save current counts for use in next updatePosition()
204		prevCountsRight = encoderRight;
205		prevCountsLeft = encoderLeft;
206	
207		//Get velocities from delta encoder values
208		//getRVel(deltaEncoderRight, deltaEncoderLeft, timeSinceLast);
209	
210		float gyroAngVel = getZRot(timeSinceLast);
211		//rVelocities[3] = (rVelocities[3] + gyroAngVel) / 2.0f;
</Source>
        <MessageVariables>
          <MessageVariable Name="filteredAngle" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="9" Name="HW3.ino, line 240" Id="171889ad-dc93-4746-9ed6-a6769bdbcdc3" Enabled="1" Message="{gCurrentPose[0]}{gCurrentPose[1]}{gCurrentPose[2]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="240" FileColumn="1" FunctionName="updatePosition()" FunctionLineOffset="65" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='171889ad-dc93-4746-9ed6-a6769bdbcdc3'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>233	
234	
235		//Update robot pose in the global coordinate frame
236		gCurrentPose[0] = gPrevPose[0] + deltaCenter*cos(rCurrentPose[2]);
237		gCurrentPose[1] = gPrevPose[1] + deltaCenter*sin(rCurrentPose[2]);
238		gCurrentPose[2] = rCurrentPose[2];
239	
--&gt;240	
241	
242	
243		prevTime = millis();
244	
245	
246		//Save current poses for use in the next updatePosition()
247		for (int i = 0; i &lt; 3; i++) {
248			gPrevPose[i] = gCurrentPose[i];
249			rPrevPose[i] = rCurrentPose[i];
</Source>
        <MessageVariables>
          <MessageVariable Name="gCurrentPose[0]" Index="1" />
          <MessageVariable Name="gCurrentPose[1]" Index="2" />
          <MessageVariable Name="gCurrentPose[2]" Index="3" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>