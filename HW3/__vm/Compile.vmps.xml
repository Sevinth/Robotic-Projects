<VisualMicro>
  <Program Name="HW3" Ext=".ino" Location="C:\Robotic-Projects\HW3">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" SketchName="HW3" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_USB;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="pololu" Platform="avr" Architecture="avr">
      <Board Name="pololu_pololu_avr_a-star32U4" Description="Pololu A-Star 32U4" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo" McuIdePath="C:\Program Files (x86)\Arduino" McuSketchBookPath="C:\Users\mryhe\Documents\Arduino" name="Pololu A-Star 32U4" vid.0="0x1ffb" pid.0="0x0101" vid.1="0x1ffb" pid.1="0x2300" upload.tool="arduino:avrdude" upload.protocol="avr109" upload.maximum_size="28672" upload.maximum_data_size="2560" upload.speed="57600" upload.disable_flushing="true" upload.use_1200bps_touch="true" upload.wait_for_upload_port="true" bootloader.tool="arduino:avrdude" bootloader.low_fuses="0xff" bootloader.high_fuses="0xd0" bootloader.extended_fuses="0xc8" bootloader.file="caterina/Caterina-A-Star.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x2F" build.mcu="atmega32u4" build.f_cpu="16000000L" build.vid="0x1ffb" build.pid="0x2300" build.usb_product="&quot;Pololu A-Star 32U4&quot;" build.usb_manufacturer="&quot;Pololu Corporation&quot;" build.board="AVR_A_STAR_32U4" build.core="arduino:arduino" build.variant="arduino:leonardo" build.extra_flags="{build.usb_flags}" runtime.ide.path="C:\Program Files (x86)\Arduino" build.system.path="C:\Users\mryhe\Documents\Arduino\hardware\pololu\avr\system" runtime.ide.version="10609" target_package="pololu" target_platform="avr" runtime.hardware.path="C:\Users\mryhe\Documents\Arduino\hardware\pololu" originalid="pololu_avr_a-star32U4" intellisense.tools.path="{runtime.tools.avr-gcc.path}/" intellisense.include.paths="{intellisense.tools.path}avr/include/;{intellisense.tools.path}/avr/include/avr/;{intellisense.tools.path}lib\gcc\avr\4.8.1\include" tools.atprogram.cmd.path="%AVRSTUDIO_EXE_PATH%\atbackend\atprogram" tools.atprogram.cmd.setwinpath="true" tools.atprogram.program.params.verbose="-v" tools.atprogram.program.params.quiet="-q" tools.atprogram.program.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.program.xpattern="&quot;{cmd.path}&quot; {AVRSTUDIO_BACKEND_CONNECTION} -d {build.mcu} {program.verbose} {program.extra_params} program -c -f &quot;{build.path}\{build.project_name}.hex&quot;" tools.atprogram.erase.params.verbose="-v" tools.atprogram.erase.params.quiet="-q" tools.atprogram.bootloader.params.verbose="-v" tools.atprogram.bootloader.params.quiet="-q" tools.atprogram.bootloader.pattern="&quot;{cmd.path}&quot; -d {build.mcu} {bootloader.verbose}  program -c -f &quot;{runtime.ide.path}/hardware/arduino/avr/bootloaders/{bootloader.file}&quot;" version="1.5.6" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall" compiler.warning_flags.all="-Wall -Wextra" compiler.path="{runtime.tools.avr-gcc.path}/bin/" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os {compiler.warning_flags} -std=gnu11 -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="{compiler.warning_flags} -Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -x assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os {compiler.warning_flags} -std=gnu++11 -fno-exceptions -ffunction-sections -fdata-sections -fno-threadsafe-statics -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.S.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" archive_file_path="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\core.a" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} {compiler.objcopy.eep.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} {compiler.elf2hex.extra_flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.output.tmp_file="{build.project_name}.hex" recipe.output.save_file="{build.project_name}.{build.variant}.hex" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.text|\.data|\.bootloader)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.bss|\.noinit)\s+([0-9]+).*" recipe.size.regex.eeprom="^(?:\.eeprom)\s+([0-9]+).*" preproc.includes.flags="-w -x c++ -M -MG -MP" recipe.preproc.includes="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.includes.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot;" preproc.macros.flags="-w -x c++ -E -CC" recipe.preproc.macros="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} {preproc.macros.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{preprocessed_file_path}&quot;" tools.avrdude.path="{runtime.tools.avrdude.path}" tools.avrdude.cmd.path="{path}/bin/avrdude" tools.avrdude.config.path="{path}/etc/avrdude.conf" tools.avrdude.upload.params.verbose="-v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.params.noverify="-V" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} {upload.verify} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.params.noverify="-V" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} {program.verify} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.platform.path}/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" tools.avrdude_remote.upload.pattern="/usr/bin/run-avrdude /tmp/sketch.hex {upload.verbose} -p{build.mcu}" build.usb_flags="-DUSB_VID={build.vid} -DUSB_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'" vm.platform.root.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms\arduino16x" usbavrpgm.name="Pololu USB AVR Programmer" usbavrpgm.communication="serial" usbavrpgm.protocol="avrispv2" usbavrpgm.program.protocol="avrispv2" usbavrpgm.program.tool="arduino:avrdude" usbavrpgm.program.extra_params="-P{serial.port}" runtime.tools.avrdude.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" ide.hint="For use with Arduino.cc 1.6.2+ ide" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.6.7" ide.default.version="10607" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="C:\Users\mryhe\Documents\Arduino" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\mryhe\Documents\Arduino\hardware\pololu\avr" runtime.platform.path="C:\Users\mryhe\Documents\Arduino\hardware\pololu\avr" vm.platformname.name="avr" build.arch="AVR" build.variant.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo" build.architecture="avr" vmresolved.compiler.path="C:\Program Files (x86)\Arduino\hardware\tools\avr\bin\" vmresolved.tools.path="C:\Program Files (x86)\Arduino\hardware\tools\avr" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" vm.build.verbose_build_properties="false" build.source.path="C:\Robotic-Projects\HW3\HW3.ino" build.path="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" PreProcessor.HeaderCount="1" PreProcessor.PrototypeCount="17" vm.last.preproc.file.0.file="HW3.ino" vm.last.preproc.file.0.offset="1" vm.last.preproc.file.0.length="9584" vm.last.preproc.file.0.linecount="391" vm.last.preproc.file.0.linestart="0" vm.last.preproc.file.0.lineend="391" vm.last.preproc.file.0.prefix_lines="0" serial.port.file="COM3" serial.port="COM3" serial.port.num="3" sketch_path="C:\Robotic-Projects\HW3" build.project_name="HW3.ino" runtime.vm.ide.platforms.path="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms" build.variant.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo" build.core.path="C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino" archive_file="core.a" extra.time.local="19158034" tools.ctags.path="{runtime.tools.ctags.path}" tools.ctags.cmd.path="{path}/ctags" tools.ctags.pattern="&quot;{cmd.path}&quot; -u --language-force=c++ -f - --c++-kinds=svpf --fields=KSTtzns --line-directives &quot;{source_file}&quot;" vm_all_includes=" -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\libraries\Zumo32U4&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\Wire\src&quot;  -I&quot;C:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\hardware\pololu\avr\libraries&quot; " vm_core_includes=" -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo&quot; " includes=" -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\variants\leonardo&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\dwlje1qk.0gi\Micro Platforms\default\debuggers&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\libraries\Zumo32U4&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries\Wire\src&quot;  -I&quot;C:\Program Files (x86)\Arduino\libraries&quot;  -I&quot;C:\Program Files (x86)\Arduino\hardware\arduino\avr\libraries&quot;  -I&quot;C:\Users\mryhe\Documents\Arduino\hardware\pololu\avr\libraries&quot; " build.path_sketch="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" build.path_core="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\core" build.path_libraries="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4" object_file="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\HW3.cpp.o" source_file="C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\HW3.cpp" object_files=" &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\HW3.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Wire\Wire.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Wire\utility\twi.c.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\VM_DBG\VM_DBG.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\L3G.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\LSM303.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\PololuBuzzer.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\PololuHD44780.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\Pushbutton.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\QTRSensors.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\Zumo32U4Encoders.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\Zumo32U4IRPulses.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\Zumo32U4Motors.cpp.o&quot;  &quot;C:\Users\mryhe\AppData\Local\Temp\VMicroBuilds\HW3\pololu_pololu_avr_a-star32U4\Zumo32U4\Zumo32U4ProximitySensors.cpp.o&quot; " />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="9600" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="HW3.ino, line 347" Id="3b3b2767-428a-4c26-b2c6-9e2d9039743e" Enabled="1" Message="{accZVals[0]}{accXVals[0]}{accYVals[0]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="347" FileColumn="1" FunctionName="getAccValues()" FunctionLineOffset="11" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='3b3b2767-428a-4c26-b2c6-9e2d9039743e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>340		int nSamples;
341	
342			accXVals[0] = (acc.a.x)*0.61f/1000.0f;
343	
344			accYVals[0] = (acc.a.y)*0.61f/1000.0f;
345	
346			accZVals[0] = (acc.a.z)*0.61f/1000.0f;
--&gt;347		
348	}
349	
350	void setup()
351	{
352		Serial.begin(9600);
353		while (!Serial) {}
354		//enable communication to I2C devices
355		Wire.begin();
356	
</Source>
        <MessageVariables>
          <MessageVariable Name="accZVals[0]" Index="1" />
          <MessageVariable Name="accXVals[0]" Index="2" />
          <MessageVariable Name="accYVals[0]" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="HW3.ino, line 201" Id="35769b9f-c7c6-4ef1-925e-dfb91fc64281" Enabled="1" Message="{imuAngVal}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="201" FileColumn="1" FunctionName="angCompFilter(float timeEllapsed)" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='35769b9f-c7c6-4ef1-925e-dfb91fc64281'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>194	
195		//Calculate the angle between Y and X accel values
196		float rotAcc = atan2f(accYVals[0], accXVals[0]) + pi;
197		//Gyro rotation about Z axis
198		float zGyro = getZRot(timeEllapsed);
199		//Apply computational filter to gyrosocope and accelerometer values
200		float imuAngVal = COMP_F_A*(rPrevPose[2] + zGyro*timeEllapsed) + (1.0f - COMP_F_A)*(rotAcc);
--&gt;201	
202		float angVal = COMP_F_B*(rPrevPose[2] + rVelocities[3]*timeEllapsed) + (1.0f - COMP_F_B)*imuAngVal;
203	
204		return angVal;
205	
206	}
207	
208	void gyroCalibrate() {
209	
210		//Make sure there is no rotation
</Source>
        <MessageVariables>
          <MessageVariable Name="imuAngVal" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="3" Name="HW3.ino, line 203" Id="a80d1e02-a94e-476f-9d56-16472d0153fa" Enabled="1" Message="{angVal}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="203" FileColumn="1" FunctionName="angCompFilter(float timeEllapsed)" FunctionLineOffset="14" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a80d1e02-a94e-476f-9d56-16472d0153fa'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>196		float rotAcc = atan2f(accYVals[0], accXVals[0]) + pi;
197		//Gyro rotation about Z axis
198		float zGyro = getZRot(timeEllapsed);
199		//Apply computational filter to gyrosocope and accelerometer values
200		float imuAngVal = COMP_F_A*(rPrevPose[2] + zGyro*timeEllapsed) + (1.0f - COMP_F_A)*(rotAcc);
201	
202		float angVal = COMP_F_B*(rPrevPose[2] + rVelocities[3]*timeEllapsed) + (1.0f - COMP_F_B)*imuAngVal;
--&gt;203	
204		return angVal;
205	
206	}
207	
208	void gyroCalibrate() {
209	
210		//Make sure there is no rotation
211		motors.setSpeeds(0, 0);
212		//Read the gyro
</Source>
        <MessageVariables>
          <MessageVariable Name="angVal" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="4" Name="HW3.ino, line 179" Id="77c4c897-7975-4bb1-af3f-4241776033c6" Enabled="1" Message="{gCurrentPose[0]}{gCurrentPose[1]}{gCurrentPose[2]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="179" FileColumn="1" FunctionName="updatePosition()" FunctionLineOffset="35" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='77c4c897-7975-4bb1-af3f-4241776033c6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>172		gCurrentPose[2] = gPrevPose[2] + deltaPosEst[2];
173	
174		if (gCurrentPose[2] &lt; 0.0f) {
175			gCurrentPose[2] = 2.0f * pi;
176		}
177		else if (gCurrentPose[2] &gt; 2.0f * pi) {
178			gCurrentPose[2] = 0.0f;
--&gt;179		}
180	
181		delay(20);
182		prevTime = millis();
183	
184		for (int i = 0; i &lt; 3; i++) {
185			gPrevPose[i] = gCurrentPose[i];
186			rPrevPose[i] = rCurrentPose[i];
187		}
188	}
</Source>
        <MessageVariables>
          <MessageVariable Name="gCurrentPose[0]" Index="1" />
          <MessageVariable Name="gCurrentPose[1]" Index="2" />
          <MessageVariable Name="gCurrentPose[2]" Index="3" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="5" Name="HW3.ino, line 128" Id="31d8cd1a-25f5-4597-b327-d377cd57d2c6" Enabled="1" Message="{k1[3]}{k2[3]}{k3[3]}{timeEllapsed}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="128" FileColumn="1" FunctionName="rk4(float timeEllapsed)" FunctionLineOffset="23" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='31d8cd1a-25f5-4597-b327-d377cd57d2c6'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>121	
122		k1[2] = rVelocities[0] * cos(gPrevPose[2] + k3[1] * (timeEllapsed / 2.0f));
123		k2[2] = rVelocities[0] * sin(gPrevPose[2] + k3[1] * (timeEllapsed / 2.0f));
124		k3[2] = k3[1];
125	
126		k1[3] = rVelocities[0] * cos(gPrevPose[2] + k3[2] * timeEllapsed);
127		k2[3] = rVelocities[0] * sin(gPrevPose[2] + k3[2] * timeEllapsed);
--&gt;128	
129	
130		posVec[0] = (1.0f / 6.0f)*(k1[0] + 2.0f*(k1[1] + k1[2]) + k1[3]);
131		posVec[1] = (1.0f / 6.0f)*(k2[0] + 2.0f*(k2[1] + k2[2]) + k2[3]);
132		posVec[2] = (1.0f / 6.0f)*(k3[0] + 2.0f*(k3[1] + k3[2]) + k3[3]);
133	
134		return posVec;
135	}
136	
137	
</Source>
        <MessageVariables>
          <MessageVariable Name="k1[3]" Index="1" />
          <MessageVariable Name="k2[3]" Index="2" />
          <MessageVariable Name="k3[3]" Index="3" />
          <MessageVariable Name="timeEllapsed" Index="4" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="6" Name="HW3.ino, line 81" Id="bd89a58a-161f-4285-9d48-a283e3637549" Enabled="1" Message="{rVelRight}{rVelLeft}{rVelCenter}{rVelAng}{timeEllapsed}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}{3}{4}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="81" FileColumn="1" FunctionName="getRVel(float deltaCountsRight, float deltaCountsLeft, float timeEllapsed)" FunctionLineOffset="16" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='bd89a58a-161f-4285-9d48-a283e3637549'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>74		float rVelCenter = 0.5f*(rVelRight + rVelLeft);
75		float rVelAng = (1.0 / baseWidth)*(rVelRight - rVelLeft);
76	
77		rVelocities[0] = rVelCenter;
78		rVelocities[1] = rVelRight;
79		rVelocities[2] = rVelLeft;
80		rVelocities[3] = rVelAng;
--&gt;81	
82	}
83	
84	float straightLineCalc(float distance) {
85	
86		float time;
87	
88		time = distance / rVelocities[0];
89	
90		return time;
</Source>
        <MessageVariables>
          <MessageVariable Name="rVelRight" Index="1" />
          <MessageVariable Name="rVelLeft" Index="2" />
          <MessageVariable Name="rVelCenter" Index="3" />
          <MessageVariable Name="rVelAng" Index="4" />
          <MessageVariable Name="timeEllapsed" Index="5" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="7" Name="HW3.ino, line 145" Id="ac4fb237-4643-4f19-84f9-c4162dd59a4d" Enabled="1" Message="{encoderLeft}{encoderRight}" MessageTextType="2" PreProcessedMessage="{0}{1}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="145" FileColumn="1" FunctionName="updatePosition()" FunctionLineOffset="7" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='ac4fb237-4643-4f19-84f9-c4162dd59a4d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>138	//Called durinv movment to update the robots pose
139	void updatePosition() {
140	
141		timeSinceLast = millis() - prevTime;
142	
143		float encoderLeft = encoders.getCountsAndResetLeft();
144		float encoderRight = encoders.getCountsAndResetRight();
--&gt;145	
146		getRVel(encoderRight, encoderLeft, timeSinceLast);
147	
148		float gyroAngVel = getZRot(timeSinceLast);
149	
150		float gyroEncoderError = fabs(gyroAngVel - rVelocities[3]);
151	
152		rVelocities[3] = (rVelocities[3] + gyroAngVel) / 2.0f;
153	
154		//Robot Coordinate Frame Pose
</Source>
        <MessageVariables>
          <MessageVariable Name="encoderLeft" Index="1" />
          <MessageVariable Name="encoderRight" Index="2" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="8" Name="HW3.ino, line 133" Id="f5eb0d1c-3549-43d0-a8ae-7cb9042f3081" Enabled="1" Message="{posVec[0]}{posVec[1]}{posVec[2]}" MessageTextType="2" PreProcessedMessage="{0}{1}{2}" Condition="" ConditionType="1" CurrentHits="0" File="c:\robotic-projects\hw3\hw3.ino" FileLine="133" FileColumn="1" FunctionName="rk4(float timeEllapsed)" FunctionLineOffset="28" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f5eb0d1c-3549-43d0-a8ae-7cb9042f3081'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>126		k1[3] = rVelocities[0] * cos(gPrevPose[2] + k3[2] * timeEllapsed);
127		k2[3] = rVelocities[0] * sin(gPrevPose[2] + k3[2] * timeEllapsed);
128	
129	
130		posVec[0] = (1.0f / 6.0f)*(k1[0] + 2.0f*(k1[1] + k1[2]) + k1[3]);
131		posVec[1] = (1.0f / 6.0f)*(k2[0] + 2.0f*(k2[1] + k2[2]) + k2[3]);
132		posVec[2] = (1.0f / 6.0f)*(k3[0] + 2.0f*(k3[1] + k3[2]) + k3[3]);
--&gt;133	
134		return posVec;
135	}
136	
137	
138	//Called durinv movment to update the robots pose
139	void updatePosition() {
140	
141		timeSinceLast = millis() - prevTime;
142	
</Source>
        <MessageVariables>
          <MessageVariable Name="posVec[0]" Index="1" />
          <MessageVariable Name="posVec[1]" Index="2" />
          <MessageVariable Name="posVec[2]" Index="3" />
        </MessageVariables>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>